Index: oplog_applier/oplog_applier/oplog_applier.gv
===================================================================
--- oplog_applier.orig/oplog_applier/oplog_applier.gv
+++ oplog_applier/oplog_applier/oplog_applier.gv
@@ -29,7 +29,7 @@ fontsize = "16";
 
 "OplogApplier" [
 fillcolor = white;
-label = "OplogApplier \l(has OplogBuffer, OpQueueBatcher)\l|<waitForSpace> * waitForSpace\l|<enqueue> * enqueue\l|<multiApply> * multiApply\l|<shutdown> * shutdown\l|OplogApplierImpl\l|<getNextApplierBatch> * getNextApplierBatch\l|<_run> * _run\l|<_multiApply> * _multiApply\l|<fillWriterVectors> * _fillWriterVectors\l"
+label = "OplogApplier \l(has OplogBuffer, OpQueueBatcher)\l|<waitForSpace> * waitForSpace\l|<enqueue> * enqueue\l|<multiApply> * multiApply\l|<shutdown> * shutdown\l|OplogApplierImpl\l|<getNextApplierBatch> * getNextApplierBatch\l|<_run> * _run\l|<_multiApply> * _multiApply\l|<fillWriterVectors> * _fillWriterVectors\l|<applyOplogGroup> * applyOplogGroup\l";
 ];
 
 OplogApplier:enqueue -> OplogBuffer:push;
@@ -42,7 +42,7 @@ OplogApplier:_run -> ReplicationCoordina
 OplogApplier:_run -> OplogApplier:_multiApply;
 OplogApplier:_multiApply -> scheduleWritesToOplog;
 OplogApplier:_multiApply -> OplogApplier:fillWriterVectors;
-OplogApplier:_multiApply -> applyOplogGroup [label=_applyFunc];
+OplogApplier:_multiApply -> OplogApplier:applyOplogGroup;
 
 applyOplogEntryBatch -> applyOperation_inlock;
 applyOplogEntryBatch -> applyCommand_inlock;
@@ -75,7 +75,7 @@ label = "OpQueue\l(opqueue_batcher.cpp)\
 // Has _getNextApplierBatchFn - this is OplogApplier::getNextApplierBatch in oplog_applier.cpp
 "OpQueueBatcher" [
 fillcolor = "salmon";
-label =  "OpQueueBatcher\l(op_queue_batcher.cpp)\l|<run> * run\l|<getNextBatch> * getNextBatch\l"
+label =  "OpQueueBatcher\l(op_queue_batcher.cpp)\l|<waitForSpace> * waitForSpace\l|<push> * push\l|<run> * run\l|<getNextBatch> * getNextBatch\l";
 ];
 
 OpQueueBatcher:run -> OpQueue:empty;
@@ -88,13 +88,8 @@ fillcolor = "white";
 label = "applyOplogEntryBatch\l(oplog_applier_impl.cpp)";
 ];
 
-"applyOplogGroup" [
-fillcolor = "white";
-label = "applyOplogGroup\l(oplog_applier_impl.cpp)\l  worker thread func, actually applies\l";
-];
-
-applyOplogGroup -> applyOplogEntryBatch;
-applyOplogGroup -> InsertGroup:groupAndApplyInserts;
+OplogApplier:applyOplogGroup -> applyOplogEntryBatch;
+OplogApplier:applyOplogGroup -> InsertGroup:groupAndApplyInserts;
 
 "scheduleWritesToOplog" [
 fillcolor = "white";
