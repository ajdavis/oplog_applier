Index: oplog_applier/oplog_applier/oplog_applier.gv
===================================================================
--- oplog_applier.orig/oplog_applier/oplog_applier.gv
+++ oplog_applier/oplog_applier/oplog_applier.gv
@@ -29,12 +29,13 @@ fontsize = "16";
 
 "OplogApplier" [
 fillcolor = white;
-label = "OplogApplier \l(has OplogBuffer, OpQueueBatcher)\l|<waitForSpace> * waitForSpace\l|<enqueue> * enqueue\l|<applyOplogBatch> * applyOplogBatch\l|<shutdown> * shutdown\l|OplogApplierImpl\l|<getNextApplierBatch> * getNextApplierBatch\l|<_run> * _run\l|<_applyOplogBatch> * _applyOplogBatch\l|<fillWriterVectors> * _fillWriterVectors\l|<applyOplogBatchPerWorker> * applyOplogBatchPerWorker\l";
+label = "OplogApplier \l(has OpQueueBatcher)\l|<waitForSpace> * waitForSpace\l|<enqueue> * enqueue\l|<applyOplogBatch> * applyOplogBatch\l|<shutdown> * shutdown\l|OplogApplierImpl\l|<getNextApplierBatch> * getNextApplierBatch\l|<_run> * _run\l|<_applyOplogBatch> * _applyOplogBatch\l|<fillWriterVectors> * _fillWrite    rVectors\l|<applyOplogBatchPerWorker> * applyOplogBatchPerWorker\l";
 ];
 
 OplogApplier:enqueue -> OplogBuffer:push;
-OplogApplier:waitForSpace -> OplogBuffer:waitForSpace;
 OplogApplier:applyOplogBatch -> OplogApplier:_applyOplogBatch;
+OplogApplier:waitForSpace -> OplogBuffer:waitForSpace;
+OplogApplier:_run -> OpQueueBatcher:run;
 OplogApplier:_run -> OpQueueBatcher:getNextBatch;
 OplogApplier:_run -> OpQueue:empty;
 OplogApplier:_run -> OpQueue:mustShutdown;
@@ -43,12 +44,12 @@ OplogApplier:_run -> OplogApplier:_apply
 OplogApplier:_applyOplogBatch -> scheduleWritesToOplog;
 OplogApplier:_applyOplogBatch -> OplogApplier:fillWriterVectors;
 OplogApplier:_applyOplogBatch -> OplogApplier:applyOplogBatchPerWorker;
+OplogApplier:getNextApplierBatch -> OpQueueBatcher:getNextApplierBatch;
 
 applyOplogEntryOrGroupedInserts -> applyOperation_inlock;
 applyOplogEntryOrGroupedInserts -> applyCommand_inlock;
 
-OplogApplier:getNextApplierBatch -> OplogBuffer:peek [weight=2];
-OplogApplier:getNextApplierBatch -> OplogBuffer:tryPop;
+
 "OplogBuffer" [
 label = "OplogBuffer\l|<waitForSpace> * waitForSpace\l|<push> * push\l|<peek> * peek\l|<tryPop> * tryPop\l|<waitForData> * waitForData\l"
 ];
@@ -72,15 +73,15 @@ fillcolor = "salmon";
 label = "OpQueue\l(opqueue_batcher.cpp)\l|<empty> * empty\l|<mustShutdown> * mustShutdown\l"
 ];
 
-// Has _getNextApplierBatchFn - this is OplogApplier::getNextApplierBatch in oplog_applier.cpp
 "OpQueueBatcher" [
 fillcolor = "salmon";
-label =  "OpQueueBatcher\l(op_queue_batcher.cpp)\l|<run> * run\l|<getNextBatch> * getNextBatch\l";
+label = "OpQueueBatcher\l(op_queue_batcher.cpp)\l|<run> * run\l|<getNextBatch> * getNextBatch\l|<getNextApplierBatch> * getNextApplierBatch\l";
 ];
 
 OpQueueBatcher:run -> OpQueue:empty;
 OpQueueBatcher:run -> OpQueue:mustShutdown;
-OpQueueBatcher:run -> OplogApplier:getNextApplierBatch [label = _getNextApplierBatchFn, weight=20];
+OpQueueBatcher:run -> OplogBuffer:peek;
+OpQueueBatcher:run -> OplogBuffer:tryPop;
 OpQueueBatcher:run -> OplogBuffer:waitForData;
 
 "applyOplogEntryOrGroupedInserts" [
